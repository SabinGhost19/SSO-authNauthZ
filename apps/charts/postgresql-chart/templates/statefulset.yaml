apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgresql-chart.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "postgresql-chart.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "postgresql-chart.fullname" . }}-headless
  replicas: 1
  selector:
    matchLabels:
      {{- include "postgresql-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "postgresql-chart.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        fsGroup: {{ .Values.postgresql.securityContext.fsGroup }}
        runAsUser: {{ .Values.postgresql.securityContext.runAsUser }}
        runAsGroup: {{ .Values.postgresql.securityContext.runAsGroup }}
        runAsNonRoot: {{ .Values.postgresql.securityContext.runAsNonRoot }}
      containers:
        - name: postgresql
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.database | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.username | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.existingSecret }}
                  key: password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U {{ .Values.postgresql.username | quote }} -d {{ .Values.postgresql.database | quote }} -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U {{ .Values.postgresql.username | quote }} -d {{ .Values.postgresql.database | quote }} -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          startupProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U {{ .Values.postgresql.username | quote }} -d {{ .Values.postgresql.database | quote }} -h 127.0.0.1 -p 5432
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 30
  {{- if .Values.postgresql.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "postgresql-chart.labels" . | nindent 10 }}
      spec:
        accessModes:
          - ReadWriteOnce
        {{- if .Values.postgresql.persistence.storageClass }}
        {{- if (eq "-" .Values.postgresql.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.postgresql.persistence.storageClass | quote }}
        {{- end }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.postgresql.persistence.size | quote }}
  {{- end }}